#
# Copyright 2015-present Lenovo
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

location ~ ^/api/external/(?<sub_uri>.+/) {
    set $lico_token "";
    if ($http_authorization ~* jwt(.*)) {
        set $lico_token $1;
    }
    if ($arg_token != '') {
        set $http_authorization "jwt $arg_token";
        set $lico_token $arg_token;
    }
    client_max_body_size 5000m;
    rewrite /api/external/.* /api/$sub_uri last;
}

location ~ ^/api/openapi/v1/(?<sub_uri>.+/) {
    if ($arg_token != '') {
        set $http_authorization "token $arg_token";
    }
    set $lico_token "";
    client_max_body_size 5000m;
    perl '
        use nginx;
        use LWP::UserAgent;
        use JSON;
        sub {
            my $r = shift;

            my $lico_api_gateway  = $r->variable("lico_api_gateway");
            my $authorization_header =$r->variable("http_authorization");
            my $auth_url = "$lico_api_gateway/api/user/auth/?type=internal";
            my $sub_uri = $r->variable("sub_uri");
            my $is_args = $r->variable("is_args");
            my $args = $r->variable("args");

            $ua = LWP::UserAgent->new(
                timeout=>10, ssl_opts=>{
                    verify_hostname=>0, SSL_verify_mode=>0
                },
             );
            $request = HTTP::Request->new(POST=>$auth_url);
            $request->header("Authorization", $authorization_header);
            my $res = $ua->request($request);

            if ($res->is_success) {
                my $hash = JSON::decode_json($res->decoded_content);

                $r->variable("lico_token", $hash->{token});

                $r->internal_redirect("/api/$sub_uri$is_args$args");
            } else {
                return $res->status_line();
            }
        }
    ';
}

location ~ ^/api/download/(?<sub_uri>.+/) {
    # if ($arg_token = '') {
    #     return 401;
    # }
    # proxy_set_header Authorization "jwt $arg_token";
    proxy_pass http://$lico_core_host/api/$sub_uri$is_args$args;
    proxy_intercept_errors on;
}

location /api {
    proxy_pass http://$lico_core_host;
}

location = /config {
    default_type application/json;
    alias /etc/lico/openlico-portal.conf;
}
